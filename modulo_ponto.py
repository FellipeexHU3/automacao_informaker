import pyautogui
import time
from dotenv import load_dotenv  
import os

# Carregar vari√°veis do .env uma vez no in√≠cio
load_dotenv() 

def bater_ponto(horario):
    """
    Executa sequ√™ncia de navega√ß√£o at√© o formul√°rio
    e clica de acordo com o hor√°rio (entrada, almo√ßo, volta, sa√≠da).
    """
    print("üñ±Ô∏è EXECUTANDO SEQU√äNCIA DE NAVEGA√á√ÉO...")
    
    pyautogui.FAILSAFE = True
    
    try:
        # Pequena pausa para garantir que o usu√°rio pode parar se algo der errado
        time.sleep(2)
        print("üñ±Ô∏è PRIMEIRO CLICK - Recep√ß√£o")
        pyautogui.click(22, 362)
        time.sleep(1.5)

        print("üñ±Ô∏è SEGUNDO CLICK - Hor√°rios")
        pyautogui.click(23, 200)
        time.sleep(3)

        print("üñ±Ô∏è TERCEIRO CLICK - Bot√£o do hor√°rio escolhido")

        if horario == "Entrada":
            pyautogui.click(420, 375)  # exemplo de coordenada para "Entrada"
            print("‚úÖ Marcado: ENTRADA")

        elif horario == "Almoco":
            pyautogui.click(475, 375)  # exemplo de coordenada para "Almo√ßo"
            print("‚úÖ Marcado: ALMO√áO")

        elif horario == "Volta":
            pyautogui.click(530, 375)  # exemplo de coordenada para "Volta do Almo√ßo"
            print("‚úÖ Marcado: VOLTA DO ALMO√áO")

        elif horario == "Saida":
            pyautogui.click(600, 375)  # exemplo de coordenada para "Sa√≠da"
            print("‚úÖ Marcado: SA√çDA")

        else:
            print("‚ùå Hor√°rio inv√°lido!")

        time.sleep(0.5)
        pyautogui.click(1080, 375)
        time.sleep(0.5)
        """ pyautogui.click(171, 420) """
        print("üéâ Ponto registrado com sucesso!")

    except Exception as e:
        print(f"‚ö†Ô∏è Erro durante a execu√ß√£o: {e}")
